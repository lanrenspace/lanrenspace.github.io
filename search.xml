<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>超卖（三）：使用ReentrantLock锁解决</title>
      <link href="chao-mai-san-shi-yong-ree/"/>
      <url>chao-mai-san-shi-yong-ree/</url>
      
        <content type="html"><![CDATA[<h3 id="使用ReentrantLock"><a href="#使用ReentrantLock" class="headerlink" title="使用ReentrantLock"></a>使用ReentrantLock</h3><p>使用jdk1.5以后的ReentrantLock可重入锁解决超卖问题：</p><blockquote><p>修改下单服务</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//@Transactional(rollbackFor = Exception.class)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// 加锁</span>    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取事务</span>        <span class="token class-name">TransactionStatus</span> transaction <span class="token operator">=</span> platformTransactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transactionDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 事务回滚</span>            platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 商品目前库存</span>        <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"用户："</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">" 获取到的商品库存数："</span> <span class="token operator">+</span> currentCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 事务回滚</span>            platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// 更新商品库存   </span>        <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建订单</span>        <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//提交事务</span>        platformTransactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 释放锁</span>        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>测试用例</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 模拟用户A和B</span>    <span class="token class-name">CountDownLatch</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> strings <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 当前商品和订单信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-></span> executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            orderService<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            count<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    count<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 查看商品信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>测试用例执行结果</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">B</span> 获取到的商品库存数：<span class="token number">1</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">B</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">A</span> 获取到的商品库存数：<span class="token number">0</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> 商品库存不足<span class="token operator">!</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span><span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">FastClassBySpringCGLIB</span>$$<span class="token number">68</span>a61395<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span>MethodProxy</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">MethodProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>CglibAopProxy</span>$<span class="token class-name">DynamicAdvisedInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CglibAopProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">688</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">EnhancerBySpringCGLIB</span>$$<span class="token number">927</span>a4f46<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span><span class="token punctuation">.</span>lambda$<span class="token keyword">null</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name">OversoldApplicationTests</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">748</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">8</span>bf714b0<span class="token operator">-</span><span class="token number">2466</span><span class="token operator">-</span><span class="token number">46</span>bb<span class="token operator">-</span>a738<span class="token operator">-</span>eef2ef32026a<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们发现执行结果和使用Synchronized关键字加锁一样，当商品库存为1时始终只有一个用户能够下单成功，商品库存数量与订单数量均正常；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 超卖问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题 </tag>
            
            <tag> 超卖问题 </tag>
            
            <tag> 锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超卖（二）：使用Synchronized锁关键字解决</title>
      <link href="mai-er/"/>
      <url>mai-er/</url>
      
        <content type="html"><![CDATA[<h3 id="超卖现象二"><a href="#超卖现象二" class="headerlink" title="超卖现象二"></a>超卖现象二</h3><p>我们在上一篇中使用UPDATE进行库存扣减时商品库存变成了-1</p><h3 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h3><ol><li>程序并发检验库存，造成库存充足的假象</li><li>UPDATE更新库存，导致库存为负数</li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>一. 实现思路</p><blockquote><p>在使用update语句更新完库存后再次校验商品的库存数量，如果商品库存数量为负数，则直接抛出异常让整个事务回滚，让当前线程创建订单不成功<br>在下单服务更新库存后面添加校验库存</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    <span class="token comment">// ...</span>    <span class="token comment">// 更新库存</span>    <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 再次校验商品库存数量，如果商品库存数量为负数，则抛出异常</span>    <span class="token comment">// ...</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>二. 使用锁来解决</p><blockquote><p>在校验库存、扣减库存时统一加锁使之成为原子性的操作<br>并发时，只有获得锁的线程才能校验库存、扣减库存<br>扣减库存结束后，释放所，确保商品库存不为变成负数</p></blockquote><blockquote><p>使用 Synchronized关键字解决超卖的问题</p></blockquote><ol><li>使用 <strong>方法锁</strong> 给创建订单的服务加上Synchronized关键字</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 商品目前库存</span>    <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"用户："</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">" 获取到的商品库存数："</span> <span class="token operator">+</span> currentCount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 更新商品库存</span>    <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建订单</span>    <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试用例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 模拟用户A和B</span>    <span class="token class-name">CountDownLatch</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> strings <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 当前商品和订单信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-></span> executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            orderService<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            count<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    count<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 查看商品信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试用例执行结果：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">A</span> 获取到的商品库存数：<span class="token number">1</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">A</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">B</span> 获取到的商品库存数：<span class="token number">1</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">B</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">85</span>b88d96<span class="token operator">-</span><span class="token number">3459</span><span class="token operator">-</span><span class="token number">46</span>a3<span class="token operator">-</span>a9bf<span class="token operator">-</span><span class="token number">3</span>a0beed6f5c8<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">A</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">43643791</span><span class="token operator">-</span><span class="token number">1</span>c88<span class="token operator">-</span><span class="token number">4356</span><span class="token operator">-</span><span class="token number">9</span>b1d<span class="token operator">-</span><span class="token number">57f</span><span class="token number">12e1</span>c6517<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们发现最后商品库存还是变成了-1，而用户A和用户B获取到的库存都是1，订单也全部创建成功；<br>这是因为我们的<strong>锁释放后方法的事务还没有提交成功</strong>，所以导致用户A和用户B获取到的数量都还是没完成事务提交前的商品数据，<strong>解决方法：事务也放到锁里面去</strong></p></blockquote><p>吧事务也放到锁里面，修改下单服务事务为手动提交：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">PlatformTransactionManager</span> platformTransactionManager<span class="token punctuation">;</span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">TransactionDefinition</span> transactionDefinition<span class="token punctuation">;</span><span class="token comment">//@Transactional(rollbackFor = Exception.class)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取事务</span>    <span class="token class-name">TransactionStatus</span> transaction <span class="token operator">=</span> platformTransactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transactionDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 事务回滚</span>        platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 商品目前库存</span>    <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"用户："</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">" 获取到的商品库存数："</span> <span class="token operator">+</span> currentCount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 事务回滚</span>        platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 更新商品库存</span>    <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建订单</span>    <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//提交事务</span>    platformTransactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试用例执行结果：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">B</span> 获取到的商品库存数：<span class="token number">1</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">B</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">A</span> 获取到的商品库存数：<span class="token number">0</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> 商品库存不足<span class="token operator">!</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span><span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">FastClassBySpringCGLIB</span>$$<span class="token number">68</span>a61395<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span>MethodProxy</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">MethodProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>CglibAopProxy</span>$<span class="token class-name">DynamicAdvisedInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CglibAopProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">688</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">EnhancerBySpringCGLIB</span>$$<span class="token number">927</span>a4f46<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span><span class="token punctuation">.</span>lambda$<span class="token keyword">null</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name">OversoldApplicationTests</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">748</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">925d</span><span class="token number">0787</span><span class="token operator">-</span><span class="token number">3f</span>c6<span class="token operator">-</span><span class="token number">4940</span><span class="token operator">-</span>be76<span class="token operator">-</span><span class="token number">371</span>bb647dc53<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们发现用户A下单时获取到的库存数就为0了，并且抛出了商品库存不足的异常，下单后的商品信息库存数与订单信息也正确了，这样就解决了超卖的问题；</p></blockquote><ol start="2"><li>使用 <strong>代码块锁</strong> 给校验库存、扣减库存的逻辑加上Synchronized关键字</li></ol><p>修改下单服务代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//@Transactional(rollbackFor = Exception.class)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment">// this == 当前订单服务实例对象</span>    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取事务</span>        <span class="token class-name">TransactionStatus</span> transaction <span class="token operator">=</span> platformTransactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transactionDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>        product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 事务回滚</span>            platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 商品目前库存</span>        <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"用户："</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">" 获取到的商品库存数："</span> <span class="token operator">+</span> currentCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 事务回滚</span>            platformTransactionManager<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>              <span class="token comment">// 更新商品库存</span>        <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 提交事务</span>        platformTransactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 获取事务</span>    <span class="token class-name">TransactionStatus</span> transaction <span class="token operator">=</span> platformTransactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transactionDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建订单</span>    <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//提交事务</span>    platformTransactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行测试用例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">A</span> 获取到的商品库存数：<span class="token number">1</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> 用户：<span class="token class-name">B</span> 获取到的商品库存数：<span class="token number">0</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> 商品库存不足<span class="token operator">!</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span><span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">70</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">FastClassBySpringCGLIB</span>$$<span class="token number">68</span>a61395<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span>MethodProxy</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">MethodProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>CglibAopProxy</span>$<span class="token class-name">DynamicAdvisedInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CglibAopProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">688</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>$$<span class="token class-name">EnhancerBySpringCGLIB</span>$$d93ab527<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lanren<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span><span class="token punctuation">.</span>lambda$<span class="token keyword">null</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name">OversoldApplicationTests</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">748</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">A</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">4</span>bae0078<span class="token operator">-</span><span class="token number">8063</span><span class="token operator">-</span><span class="token number">4499</span><span class="token operator">-</span>bc1c<span class="token operator">-</span><span class="token number">014d</span>ba5504f4<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">A</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们发现执行结果跟在方法上加Synchronized锁手动控制事务一样，也解决了库存超扣的问题；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 超卖问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题 </tag>
            
            <tag> 超卖问题 </tag>
            
            <tag> UPDATE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超卖（一）：使用UPDATE行锁解决超卖并发</title>
      <link href="chao-mai/"/>
      <url>chao-mai/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是超卖"><a href="#什么是超卖" class="headerlink" title="什么是超卖"></a>什么是超卖</h3><p>一件商品库存数量1件，最后卖出了2件（商品卖出数量超出了库存的数据）</p><h3 id="超卖现象"><a href="#超卖现象" class="headerlink" title="超卖现象"></a>超卖现象</h3><ol><li>系统中库存数量为1，但是产生了两笔订单</li><li>卖家在发货时，发现只有1件商品，但是有两笔订单<br>eg: 假如商品只剩下一件，A用户和B用户同时看到这个商品，加入购物车，并同时提交了订单，这一件商品就产生了两笔订单；</li></ol><blockquote><p>商品表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> product<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> product<span class="token punctuation">(</span>    id <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键ID'</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品名称'</span><span class="token punctuation">,</span>    price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品价格'</span><span class="token punctuation">,</span>    count <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品库存'</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>订单表</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> order_info<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> order_info<span class="token punctuation">(</span>    id <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键ID'</span><span class="token punctuation">,</span>    user_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'购买用户名'</span><span class="token punctuation">,</span>    amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'金额'</span><span class="token punctuation">,</span>    num <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'购买数量'</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>下单服务</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 商品目前库存</span>    <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 剩余库存</span>    <span class="token class-name">Integer</span> leftCount <span class="token operator">=</span> currentCount <span class="token operator">-</span> purchaseNum<span class="token punctuation">;</span>    <span class="token comment">// 更新商品库存</span>    product<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建订单</span>    <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>编写测试用例模拟用户A和用户B同时下单</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 模拟用户A和B</span>    <span class="token class-name">CountDownLatch</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> strings <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 当前商品和订单信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单前订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-></span> executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            orderService<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            count<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    count<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 查看商品信息</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后商品信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"下单后订单信息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    orderService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>执行结果如下 <strong>当A用户和B用户同时对同一个商品下单时，商品库存为1，但是A和B用户都下单成功，生成了两笔订单</strong></p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">B</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">A</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">2</span>b397742<span class="token operator">-</span>b079<span class="token operator">-</span><span class="token number">4780</span><span class="token operator">-</span>b95a<span class="token operator">-</span><span class="token number">5187</span>af150158<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span>e478ea83<span class="token operator">-</span><span class="token number">85e8</span><span class="token operator">-</span><span class="token number">42d</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">90</span>ab<span class="token operator">-</span><span class="token number">4</span>b162ccc1bcc<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">A</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>扣减库存不在程序中进行，而在数据库中进行</li><li>像数据库传递库存增量，扣减1个库存，增量为-1</li><li>在数据库update语句计算库存（update行锁）</li></ol><blockquote><p>下单服务 <strong>吧服务中更新商品库存的代码修改为update语句（使用update的行锁）</strong></p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品ID</span>    <span class="token class-name">String</span> productId <span class="token operator">=</span> <span class="token string">"100"</span><span class="token punctuation">;</span>    <span class="token comment">// 购买数量</span>    <span class="token class-name">Integer</span> purchaseNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"商品不存在!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 商品目前库存</span>    <span class="token class-name">Integer</span> currentCount <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>purchaseNum <span class="token operator">></span> currentCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"商品库存不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 剩余库存</span>    <span class="token comment">//Integer leftCount = currentCount - purchaseNum;</span>    <span class="token comment">// 更新商品库存</span>    <span class="token comment">//product.setCount(leftCount);</span>    <span class="token comment">//productService.updateById(product);</span>        <span class="token comment">// 使用update语句更新商品库存（库存 = 当前库存 - 下单数量）</span>    <span class="token class-name">StringBuffer</span> updateSql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"count = "</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"count - "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" where id = '"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    productService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建订单</span>    <span class="token class-name">OrderInfo</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>purchaseNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userId <span class="token operator">+</span> <span class="token string">" 下单成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用上述测试用例测试结果</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单前订单信息：<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">B</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>o<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OrderServiceImpl</span>      <span class="token operator">:</span> <span class="token class-name">A</span> 下单成功！<span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后商品信息：<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token operator">=</span>商品一<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span>l<span class="token punctuation">.</span>oversold<span class="token punctuation">.</span></span>OversoldApplicationTests</span>    <span class="token operator">:</span> 下单后订单信息：<span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">6</span>c99dbad<span class="token operator">-</span>f988<span class="token operator">-</span><span class="token number">442</span>e<span class="token operator">-</span>b071<span class="token operator">-</span><span class="token number">01</span>bb18748022<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span class="token class-name">OrderInfo</span><span class="token punctuation">(</span>id<span class="token operator">=</span>be0b5819<span class="token operator">-</span><span class="token number">5</span>a10<span class="token operator">-</span><span class="token number">4988</span><span class="token operator">-</span>a090<span class="token operator">-</span><span class="token number">0d</span><span class="token number">05</span>b554d99d<span class="token punctuation">,</span> userName<span class="token operator">=</span><span class="token class-name">A</span><span class="token punctuation">,</span> amount<span class="token operator">=</span><span class="token number">8.19</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们发现商品库存（count）变成了-1，用户A和B还是下单成功了，同时生成了两笔订单，update的行锁虽然解决了商品库存与订单数量的对应，但是还是没有解决在并发下超卖的问题；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 超卖问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题 </tag>
            
            <tag> 超卖问题 </tag>
            
            <tag> UPDATE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL查询存在一个表中而不存在另一个表中的数据</title>
      <link href="mysql/"/>
      <url>mysql/</url>
      
        <content type="html"><![CDATA[<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>A、B两表，找出ID字段中，存在A表，但是不存在B表的数据。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>方法一<br>使用<code>NOT IN</code>执行效率低，容易理解<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> A<span class="token punctuation">.</span>ID <span class="token keyword">FROM</span> A <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span>ID <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> ID <span class="token keyword">FROM</span> B<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>方法二<br>使用<code>LEFT JOIN...ON...</code>,<code>B.ID IS NULL</code> 表示左连接之后在<code>B.ID</code>字段为<code>NULL</code>的记录<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> A<span class="token punctuation">.</span>ID <span class="token keyword">FROM</span> A <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> B <span class="token keyword">ON</span> A<span class="token punctuation">.</span>ID <span class="token operator">=</span> B<span class="token punctuation">.</span>ID <span class="token keyword">WHERE</span> B<span class="token punctuation">.</span>ID <span class="token operator">IS</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>方法三<br>执行效率最快，逻辑相对前两种复杂<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> B <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> NUM <span class="token keyword">FROM</span> A <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span>ID <span class="token operator">=</span> B<span class="token punctuation">.</span>ID<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Optional中的orElse、orElseGet、orElseThrow</title>
      <link href="optional/"/>
      <url>optional/</url>
      
        <content type="html"><![CDATA[<h3 id="orElse"><a href="#orElse" class="headerlink" title="orElse"></a>orElse</h3><p>当Optional值不存在时，调用orElse()返回orElse()的参数，如果Optional的值存在时返回Optional的值。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"orElse"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// orElse</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"null value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// test</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="orElseGet"><a href="#orElseGet" class="headerlink" title="orElseGet"></a>orElseGet</h3><p>当Optional值不存在时，调用orElseGet()中接口调用的返回值，如果Optional的值存在时返回optional的值。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 一万</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>orElse和orElseGet最直观的区别在于orElseGet可以传入一个Supplier接口，来定制实现逻辑。</strong></p><h3 id="orElseThrow"><a href="#orElseThrow" class="headerlink" title="orElseThrow"></a>orElseThrow</h3><p>如果存在该值，返回包含的值，否则抛出由Supplier继承的异常（除了null,其他空类型的数据都属于存在该值）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">CouponVo</span> useCoupon <span class="token operator">=</span> couponList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>couponVo <span class="token operator">-></span> couponId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>couponVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">ApiException</span><span class="token punctuation">(</span><span class="token class-name">OrderCode</span><span class="token punctuation">.</span>ORDER_COUPON_ERROR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Optional </tag>
            
            <tag> Java8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装JetBrains Mono字体</title>
      <link href="an-zhuang-zi-ti/"/>
      <url>an-zhuang-zi-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是JetBrainsMono"><a href="#什么是JetBrainsMono" class="headerlink" title="什么是JetBrainsMono"></a>什么是JetBrainsMono</h3><p>JetBrains mono是 Jetbrains公司开发的一款开源字体，可免费商用，也是为开发者设计的字体，字体默认安装在 Jetbrains全家桶中的任意一款软件，从v2e19.3版开始，软件自带此款字体，老版本的可以自行下载安装，整体看起来比Input mono好看。<br>为什么说是为开发者设计的字体呢？<br>    在当今的大部分时间里，我们作为开发人员都在看代码。我们一直在寻找最佳字体，以使我们更容易在屏幕上查看文本。但是，许多流行字体中的逻辑并不总是考虑到通读代码和阅读书本之间的別。我们的眼以非常不同的方式沿代码移动，通常必须垂直移动和水平移动，这与阅读书籍不同，因为它们总是沿同一方向沿文本滑动因此，在使用 letBrains mono进行开发时，除其他外，重点研究了在长时间使用代码期间可能导致眼睛疲劳的问题。我们考虑了字母的大小和形状等问题；它们之间的空间量，自然以等竞字体设计的平衡；一些看起来不必要的纽节和符号之间不清楚的区别。<br>个人感觉：字体不适合新手开发，比如你输入一个-&gt;，它会给优化成→，那么会导致你误认为它就是一个箭头，给阅读代码带来一定的障碍。同时你给别人截图代码的时候，若是没有用过这种字体也会看不习惯，难以阅读。</p><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><ol><li>在官网下载字体安装包<br><a href="https://www.jetbrains.com/lp/mono/">https://www.jetbrains.com/lp/mono/</a></li><li>解压字体包<br>解压安装包后，选中所有字体文件，右键安装，完成后重启IntellJ Idea （<strong>安装字体时选择给所有用户安装</strong>）</li><li>选择字体<br>File &gt; Settings &gt; Editor &gt; Font 选择：JetBrains Mono</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> JetBrains </tag>
            
            <tag> Font </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 安装Git（yum、源码包方式）</title>
      <link href="centos7-an-zhuang-git-yum-yuan-ma-bao-fang-shi/"/>
      <url>centos7-an-zhuang-git-yum-yuan-ma-bao-fang-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="查看是否安装过Git"><a href="#查看是否安装过Git" class="headerlink" title="查看是否安装过Git"></a>查看是否安装过Git</h3><p>若出现版本号，则表示已经安装过了，不需要再次安装。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装以后查看版本号，能看到则表示安装成功；使用yum安装的默认路径在 /usr/bin/git 下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="移除git"><a href="#移除git" class="headerlink" title="移除git"></a>移除git</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum remove git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>使用git源码安装git</p><ol><li>安装依赖包<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>下载git源码并解压<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;usr&#x2F;local&#x2F;git &amp;&amp; cd &#x2F;usr&#x2F;local&#x2F;gitwget https:&#x2F;&#x2F;github.com&#x2F;git&#x2F;git&#x2F;archive&#x2F;vxxx.zip # xxx 版本号unzip vxxx.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>进入解压目录，配置参数<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git allmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>等待安装完成，使用 git –version 查看版本号，能看到即可</li><li>配置PATH<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim &#x2F;etc&#x2F;profileexport PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin:$PATH# 刷新使文件生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 安装、升级 Nodejs</title>
      <link href="centos7-an-zhuang-sheng-ji-nodejs/"/>
      <url>centos7-an-zhuang-sheng-ji-nodejs/</url>
      
        <content type="html"><![CDATA[<h3 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h3><p>想安装的版本可以在 <a href="https://nodejs.org/download/release/">https://nodejs.org/download/release/</a> 中查找。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;usr&#x2F;local&#x2F;nodejscd &#x2F;usr&#x2F;local&#x2F;nodejswget https:&#x2F;&#x2F;nodejs.org&#x2F;download&#x2F;release&#x2F;v12.2.0&#x2F;node-v12.2.0-linux-x64.tar.gztar zxvf node-v12.2.0-linux-x64.tar.gzmv node-v12.2.0-linux-x64.tar.gz node-v12.2.0# 修改PATHvim &#x2F;etc&#x2F;profileexport NodeJs&#x3D;&#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;node-v12.2.0export PATH&#x3D;$PATH:NodeJs&#x2F;bin# 刷新source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="升级Node版本"><a href="#升级Node版本" class="headerlink" title="升级Node版本"></a>升级Node版本</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -g n# 通过n来升级node版本，n v14.2.0 指定 v14.2.0 版本&#x2F;usr&#x2F;local&#x2F;node_project&#x2F;node&#x2F;bin&#x2F;n ls&#x2F;usr&#x2F;local&#x2F;node_project&#x2F;node&#x2F;lib&#x2F;node_modules&#x2F;n&#x2F;bin&#x2F;n v14.2.0# 备份原来node版本，替换成最新的版本cd &#x2F;usr&#x2F;bin&#x2F;mv node node_v12.2.0ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="升级npm版本"><a href="#升级npm版本" class="headerlink" title="升级npm版本"></a>升级npm版本</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 指定版本npm install npm@6.14.2 -g# 最新版本npm install npm@latest -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建一个node项目"><a href="#创建一个node项目" class="headerlink" title="创建一个node项目"></a>创建一个node项目</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;usr&#x2F;app&#x2F;web&#x2F;demo &amp;&amp; cd &#x2F;usr&#x2F;app&#x2F;web&#x2F;demo&#x2F;npm initcat package.json&#123;  &quot;name&quot;: &quot;demo&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;description&quot;: &quot;lanren node demo&quot;,  &quot;main&quot;: &quot;index.js&quot;,  &quot;scripts&quot;: &#123;    &quot;start&quot;: &quot;node index.js&quot;  &#125;,  &quot;author&quot;: &quot;lanren&quot;,  &quot;license&quot;: &quot;ISC&quot;&#125;# 新建 index.jsvim index.jsvar http &#x3D; require(&quot;http&quot;);http.createServer(function(req,res)&#123;    res.write(&#39;&lt;head&gt;&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;head&gt;&#39;);    res.write(&quot;lanren node demo!&quot;);    res.end();&#125;).listen(4002);# 启动npm run start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fatal: refusing to merge unrelated histories问题</title>
      <link href="fatal-refusing-to-merge-unrelated-histories-wen-ti/"/>
      <url>fatal-refusing-to-merge-unrelated-histories-wen-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="问题情况"><a href="#问题情况" class="headerlink" title="问题情况"></a>问题情况</h3><p>本地创建了一个仓库（存在README），吧本地仓库和GitHub上关联后，使用git pull 出现以下问题：</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">fatal: refusing to merge unrelated histories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>是因为两个分支是两个不同的版本，具有不同的提交历史。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>添加命令：</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git pull origin master --allow-unrelated-histories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>可以允许不相关历史提交，强行合并。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Git将本地代码上传到GitHub</title>
      <link href="shi-yong-git-jiang-ben-di-dai-ma-shang-chuan-dao-github/"/>
      <url>shi-yong-git-jiang-ben-di-dai-ma-shang-chuan-dao-github/</url>
      
        <content type="html"><![CDATA[<h3 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h3><p>在本地环境项目目录下打开Git Base Here，输入git init 命令.</p><h3 id="配置全局变量"><a href="#配置全局变量" class="headerlink" title="配置全局变量"></a>配置全局变量</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global user.name <span class="token string">"GitHub用户名"</span>git config --global user.email <span class="token string">"GitHub登陆邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="添加到本地仓库"><a href="#添加到本地仓库" class="headerlink" title="添加到本地仓库"></a>添加到本地仓库</h3><ol><li>本地项目目录的文件添加到暂缓区.<pre class="line-numbers language-git" data-language="git"><code class="language-git">git add . (. 表示所有文件)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>暂缓区的文件提交到本地仓库<pre class="line-numbers language-git" data-language="git"><code class="language-git">git commit -m <span class="token string">"注释信息"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="本地仓库和GitHub仓库关联"><a href="#本地仓库和GitHub仓库关联" class="headerlink" title="本地仓库和GitHub仓库关联"></a>本地仓库和GitHub仓库关联</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git remote add origin https://github.com/xxxxx/xxxxx.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="代码从本地仓库上传到GitHub仓库"><a href="#代码从本地仓库上传到GitHub仓库" class="headerlink" title="代码从本地仓库上传到GitHub仓库"></a>代码从本地仓库上传到GitHub仓库</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git pull origin mastergit push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="更新远程仓库代码到本地"><a href="#更新远程仓库代码到本地" class="headerlink" title="更新远程仓库代码到本地"></a>更新远程仓库代码到本地</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git fetch origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity与默认CorsFilter冲突问题（异常情况）</title>
      <link href="springsecurity-yu-mo-ren-corsfilter-chong-tu-wen-ti-er/"/>
      <url>springsecurity-yu-mo-ren-corsfilter-chong-tu-wen-ti-er/</url>
      
        <content type="html"><![CDATA[<h3 id="问题情况"><a href="#问题情况" class="headerlink" title="问题情况"></a>问题情况</h3><p>在SpringBoot项目中整合了Spring Security OAuth2做token认证，出现Cors跨域异常，便使用了CorsFilter进行跨域处理配置，相关配置如下（但是还是出现了问题）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CorsConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">corsFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">UrlBasedCorsConfigurationSource</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CorsConfiguration</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CorsConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setAllowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">addAllowedOrigin</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span><span class="token function">registerCorsConfiguration</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FilterRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CorsFilter</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="异常信息"><a href="#异常信息" class="headerlink" title="异常信息"></a>异常信息</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span>BeanCreationException</span><span class="token operator">:</span> <span class="token class-name">Error</span> creating bean <span class="token keyword">with</span> <span class="token namespace">name</span> <span class="token string">'springSecurityFilterChain'</span> defined in <span class="token keyword">class</span> path resource <span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span>BeanNotOfRequiredTypeException</span><span class="token operator">:</span> <span class="token class-name">Bean</span> named <span class="token string">'corsFilter'</span> is expected <span class="token keyword">to</span> <span class="token namespace">be</span> of type <span class="token string">'org.springframework.web.filter.CorsFilter'</span> but was actually of type <span class="token string">'org.springframework.boot.web.servlet.FilterRegistrationBean'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token class-name">Ordered</span><span class="token punctuation">.</span>HIGHEST_PRECEDENCE<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomCorsFilter</span> <span class="token keyword">extends</span> <span class="token class-name">CorsFilter</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Constructor accepting a &#123;@link CorsConfigurationSource&#125; used by the filter     * to find the &#123;@link CorsConfiguration&#125; to use for each incoming request.     *     * @see UrlBasedCorsConfigurationSource     */</span>    <span class="token keyword">public</span> <span class="token class-name">CustomCorsFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token function">configurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span> <span class="token function">configurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CorsConfiguration</span> corsConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CorsConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> allowedHeaders <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token string">"content-type"</span><span class="token punctuation">,</span> <span class="token string">"X-Requested-With"</span><span class="token punctuation">,</span> <span class="token string">"XMLHttpRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> exposedHeaders <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token string">"content-type"</span><span class="token punctuation">,</span> <span class="token string">"X-Requested-With"</span><span class="token punctuation">,</span> <span class="token string">"XMLHttpRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> allowedMethods <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"DELETE"</span><span class="token punctuation">,</span> <span class="token string">"PUT"</span><span class="token punctuation">,</span> <span class="token string">"OPTIONS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> allowedOrigins <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setAllowedHeaders</span><span class="token punctuation">(</span>allowedHeaders<span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setAllowedMethods</span><span class="token punctuation">(</span>allowedMethods<span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setAllowedOrigins</span><span class="token punctuation">(</span>allowedOrigins<span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setExposedHeaders</span><span class="token punctuation">(</span>exposedHeaders<span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">36000L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfig<span class="token punctuation">.</span><span class="token function">setAllowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">UrlBasedCorsConfigurationSource</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span><span class="token function">registerCorsConfiguration</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">,</span> corsConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> source<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
            <tag> OAuth2 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity与默认CorsFilter冲突问题（一般情况）</title>
      <link href="springsecurity-yu-mo-ren-corsfilter-chong-tu-wen-ti-1/"/>
      <url>springsecurity-yu-mo-ren-corsfilter-chong-tu-wen-ti-1/</url>
      
        <content type="html"><![CDATA[<h3 id="Cors简单介绍"><a href="#Cors简单介绍" class="headerlink" title="Cors简单介绍"></a>Cors简单介绍</h3><p>Cors是一个W3C标准，全称“跨域资源共享（Cross-origin resource sharing）”.它允许浏览器向跨源服务器发出XMLHttpRequest请求，从而克服了Ajax只能同源使用的限制。</p><h3 id="Response响应头"><a href="#Response响应头" class="headerlink" title="Response响应头"></a>Response响应头</h3><table><thead><tr><th align="center">响应头字段名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">Access-Control-Allow-Origin</td><td align="center">允许访问的客户端域名</td></tr><tr><td align="center">Access-Control-Allow-Credentials</td><td align="center">是否允许请求带有验证信息，若要获取客户端域下的cookie时，需要将其设置为true。</td></tr><tr><td align="center">Access-Control-Allow-Headers</td><td align="center">允许服务端访问的客户端请求头</td></tr><tr><td align="center">Access-Control-Allow-Methods</td><td align="center">允许访问的HTTP请求方法</td></tr><tr><td align="center">Access-Control-Max-Age</td><td align="center">用来指定预检请求的有效期(秒)，在有效期内不在发送预检请求直接请求。</td></tr></tbody></table><h3 id="SpringBoot配置Cors"><a href="#SpringBoot配置Cors" class="headerlink" title="SpringBoot配置Cors"></a>SpringBoot配置Cors</h3><p>继承WebMvcConfigurer，自定义Filter注册</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">corsFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">UrlBasedCorsConfigurationSource</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CorsConfiguration</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CorsConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    config<span class="token punctuation">.</span><span class="token function">setAllowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    config<span class="token punctuation">.</span><span class="token function">addAllowedOrigin</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    source<span class="token punctuation">.</span><span class="token function">registerCorsConfiguration</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">FilterRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CorsFilter</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    bean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>1.配置SpringSecurity设置不拦截OPTIONS请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatcher</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span>OPTIONS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.配置CorsFilter的优先级要优先于SpringSecurity配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">bean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
            <tag> OAuth2 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
